dans tous les fichier qui se presente vous retrouverais :
	-Un dossier conf qui contient une multitude de test afin de tout tester, les voici :
															-bracket.conf //
															-comment.conf //
															-default.conf //
															-empty.conf //
															-falsevalue.conf //
															-falsekey.conf //
															-multiserv.conf //
															-multilocation.conf //
															-test.conf //
															-small.conf //
															-unknowwserver.conf //attention mauvais cas d'erreur gerer
															-outlocation.conf //
															-trim.conf //

	-Un dossier srcs qui contient les fichier .cpp :
		ou ConfigParser, parse le fichier.conf
		et ConfigValid, check si les key/ value sont correct dans le fichier.conf

	-un dossier includes qui contien les fichier .hpp


////////////////////////////////////////////////////////////////////

key = 0 pas obligatoire
key = 1 obligatoire dans une locations
key = 2 obligatoire dans les serveurs

	---Server---
	_keywords["listen"] = 2;
	_keywords["root"] = 2;
	_keywords["host"] = 2;
	_keywords["index"] = 2;
	_keywords["server_name"] = 0;

	---Location---
	_keywords["allow_methods"] = 1;
	_keywords["cgi"] = 1;
	_keywords["cgi_path"] = 1;
	_keywords["cgi_ext"] = 1;
	_keywords["autoindex"] = 0;
	_keywords["error_page"] = 0;
	_keywords["client_max_body_size"] = 0;
	_keywords["upload_dir"] = 0;

////////////////////////////////////////////////////////////////////

-listen : contient un nombre entre 0 et 65535
-server_name : reste une simple string qui peut contenir se qu'il souhaite
-root : c'est un path qui faut check
-host : c'est une adresse ip (127.0.0.1)
-index : lire un path ou l'on va renvoyer le serv
-autoindex : on ou off
-error page : code erreur 404/error.html		//attention mauvais cas d'erreur gerer
-clent_body : c'est just un chiffre positif
-allow methode : GET POST DELETE
-cgi : on ou off
-cgi_path : tout dans le nom, c'est un path
-cgi_ext : c'est un .sh ou .py
-uppload dir : c'est un path

////////////////////////////////////////////////////////////////////

Chose restante a faire :
	-definir le plus petit fichier conf possible (a voir avec l'equipe)
	-gere 2, 3 bricole sur chaque value recu par la key, ci dessous -->


	1.Problèmes de Path, (a voir avec l'equipe mais j'ai une petite idee ducoup)
		-Le sujet propose une résolution path comme le suivant:
		URL /kapouet est rootée sur /tmp/www
		URL /kapouet/pouic/toto/pouet doit correspondre à /tmp/www/pouic/toto/pouet
		sachant que si tu applique access() dessus pour les fichier d'exemple ils ne vont pas pouvoir access et la validation de parsing ne serait pas bon
		puis est-ce qu'on accept d'autre cas de path, par exemple dans good_test/trim.config
		il y a root    ./www
		-du coup leerror_page depend un peu du root donc faut revoir l'error_page validation après avoir resolu la parsing du root

   2. Problème de validation du server_name, (a voir avec l'equipe)
		La directive server_name peut contenir plusieurs noms :     server_name example.org www.example.org alors actuellement on parse qu'un nom

    3.comment on définit des méthodes HTTP, (a voir avec l'equipe)
		Deux directives existent dans Nginx :
		limit_except GET POST DELETE;
		allow_methods (actuellement tu accept que ça mais sachant que c pas built-in NGINX mais un module tiers)
		on fait quoi?

	4.manque de gestion des redirections dans le parsing